/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package crudarchivos.UI;

import crudarchivos.Cliente;
import crudarchivos.ClienteService;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Charly Cimino
 */
public class UIActualizarEliminar extends javax.swing.JFrame {
    //instaciar las variables.
    public ClienteService clienteService = new ClienteService();
    private ArrayList<Cliente> clientes = clienteService.getAllCliente();   //obtener los datos del archivo .csv
    public DefaultTableModel model = new DefaultTableModel();   //intaciar un modelo de la tabla
    private UIMenuCliente uiMenuCliente = new UIMenuCliente();  //instaciar la ventana 
    private UIActualizarCliente uiActualizarCliente;
    
    /**
     * Creates new form UIListarClientes
     */
    public UIActualizarEliminar(){
        super("Libros Registrados");
        initComponents();
        //setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Cerrar sin finalizar la app
       //instaciar los nombres de las columnas de la tabla
        String ids [] = {"Cedula", "Nombre", "Telefono"};

        //agragr el arreglo con los nombres de la columna a la tabla
        model.setColumnIdentifiers(ids);
        jTablaListar.setModel(model);
        
        //Ingrreasr los datos que se encunetra en archivo .csv a la tabla
        for (Cliente item : this.clientes){
            model.addRow(new Object[]{item.getCedula(), item.getNombre(), item.getTelefono()});
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaListar = new javax.swing.JTable();
        jButtonEliminar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTablaListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablaListar);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButtonEliminar)
                        .addGap(55, 55, 55)
                        .addComponent(jButtonActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonActualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setUIMenuCliente(UIMenuCliente uiMenuCliente){
        this.uiMenuCliente = uiMenuCliente;
    }
    
    public void setUIActualizarCliente (UIActualizarCliente  uiActualizarCliente ){
        this.uiActualizarCliente = uiActualizarCliente;
    }
            
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        uiMenuCliente.setVisible(true);
        
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTablaListar.getSelectedRow();
        //condicion para verifricar si ha seleccionado una fila
        if (selectedRow != -1){
            //Obtener la cedula registrada en la tabal
            int cedula =  Integer.parseInt(jTablaListar.getValueAt(selectedRow, 0).toString());
            String nombre =  jTablaListar.getValueAt(selectedRow, 1).toString();
            //ClienteService clienteService = new ClienteService();
            //Mensaje de verificación
            int respuesta = JOptionPane.showConfirmDialog(rootPane, "¿Desea Elimnar el cliente? " + nombre , "Eliminar", JOptionPane.YES_NO_OPTION);
            //condicion para elminar el cliente registrado
            if(respuesta == 0){
                model.removeRow(selectedRow);
                clienteService.deleteCliente(cedula);
            }
            System.out.println("No se ellimino");
            
        }
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTablaListar.getSelectedRow();
        //condicción para verifcar su ha seleccionado una fila
        if (selectedRow != -1){
            //Obtener los valor de la fila
            int cedula =  Integer.parseInt(jTablaListar.getValueAt(selectedRow, 0).toString());
            String nombre =  jTablaListar.getValueAt(selectedRow, 1).toString();
            int  telefono = Integer.parseInt( jTablaListar.getValueAt(selectedRow, 2).toString());
            //Guardar los datos obtenidos de la fila a un objecto de tipo Cliente
            Cliente cliente = new Cliente(cedula, nombre, telefono);
            
            //verificacion de datos 
            System.out.println("Cedula = " + cedula + "| nombre = " + nombre +" | telefono= " + telefono);
            //verificar si ya hay una venta creada de actualizar cliente
            if (uiActualizarCliente == null){
                uiActualizarCliente = new UIActualizarCliente();
            }
            //enviar los datos a la venta de actualizar
            uiActualizarCliente.setCliente(cliente);
            uiActualizarCliente.setVisible(true);
            this.setVisible(false);            
        }
        
        
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIActualizarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIActualizarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIActualizarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIActualizarEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UIActualizarEliminar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablaListar;
    // End of variables declaration//GEN-END:variables
    
}

